import { render, screen, fireEvent } from "@testing-library/react";
import AddUser from "@/app/dashboard/users/add-user/add-user";
import { SessionProvider } from "next-auth/react";

describe("AddUser Component", () => {
  it("affiche le formulaire pour ajouter un utilisateur", () => {
    render(
      <SessionProvider session={null}>
        <AddUser />
      </SessionProvider>
    );

    expect(screen.getByText("Ajouter un utilisateur")).toBeInTheDocument();
    expect(screen.getByRole("textbox", { name: /email/i })).toBeInTheDocument();
    expect(
      screen.getByRole("button", { name: /ajouter/i })
    ).toBeInTheDocument();
  });

  it("n'autorise pas les non-admins à voir le formulaire", () => {
    const session = {
      user: { name: "Test User", email: "user@test.com", role: "USER" },
    };

    render(
      <SessionProvider session={session}>
        <AddUser />
      </SessionProvider>
    );

    expect(
      screen.getByText(
        "Vous devez être un administrateur pour ajouter un utilisateur."
      )
    ).toBeInTheDocument();
  });

  it("soumet le formulaire avec des données valides", () => {
    const session = {
      user: { name: "Admin User", email: "admin@test.com", role: "ADMIN" },
    };

    render(
      <SessionProvider session={session}>
        <AddUser />
      </SessionProvider>
    );

    const emailInput = screen.getByRole("textbox", { name: /email/i });
    const submitButton = screen.getByRole("button", { name: /ajouter/i });

    fireEvent.change(emailInput, { target: { value: "newuser@test.com" } });
    fireEvent.click(submitButton);

    expect(emailInput).toHaveValue("newuser@test.com");
    // Vous pouvez ajouter une simulation d'API avec un mock.
  });
});
